#!/bin/bash

detect_distro() {
  if [ -f /etc/os-release ]; then
    . /etc/os-release
    DISTRO=$ID
  else
    echo "‚ùå Unable to detect OS. Exiting."
    exit 1
  fi
}

install_nfs_server_packages() {
  case $DISTRO in
    ubuntu|debian)
      apt update && apt install -y nfs-kernel-server
      ;;
    rhel|centos|fedora)
      yum install -y nfs-utils
      systemctl enable --now nfs-server
      ;;
    sles|opensuse-leap|opensuse)
      zypper install -y nfs-kernel-server
      systemctl enable --now nfsserver
      ;;
    *)
      echo "‚ùå Unsupported distribution for NFS Server: $DISTRO"
      exit 1
      ;;
  esac
}

install_nfs_client_packages() {
  case $DISTRO in
    ubuntu|debian)
      apt update && apt install -y nfs-common rpcbind
      ;;
    rhel|centos|fedora)
      yum install -y nfs-utils
      systemctl enable --now rpcbind
      ;;
    sles|opensuse-leap|opensuse)
      zypper install -y nfs-client
      systemctl enable --now rpcbind
      ;;
    *)
      echo "‚ùå Unsupported distribution for NFS Client: $DISTRO"
      exit 1
      ;;
  esac
}

echo "Select mode:"
select mode in "NFS Server" "NFS Client" "Exit"; do
  case $mode in
    "NFS Server")
      detect_distro
      echo "üöÄ Starting NFS Server Setup..."

      echo "üì¶ Listing available disks (excluding mounted)..."
      lsblk -dpno NAME,SIZE | grep -v "$(df -h | awk '{print $1}' | grep ^/dev/ | tr '\n' '|')" | sed 's/|$//'

      read -p "üëâ Enter disk to format (e.g., /dev/sdc): " DISK
      if [ ! -b "$DISK" ]; then echo "‚ùå Disk not found."; exit 1; fi

      read -p "‚ö†Ô∏è Are you sure to format $DISK? (y/n): " confirm
      [[ $confirm != "y" ]] && echo "Cancelled." && exit 0

      read -p "üìÅ Enter mount point directory (e.g., /nfsshare): " MOUNT_POINT

      echo "üîß Formatting $DISK..."
      mkfs.ext4 -F "$DISK"

      mkdir -p "$MOUNT_POINT"
      mount "$DISK" "$MOUNT_POINT"

      UUID=$(blkid -s UUID -o value "$DISK")
      [ -z "$UUID" ] && echo "‚ùå UUID fetch failed." && exit 1

      cp /etc/fstab /etc/fstab.backup
      echo "UUID=$UUID $MOUNT_POINT ext4 defaults,nofail 0 2" >> /etc/fstab

      echo "üì¶ Installing NFS Server packages..."
      install_nfs_server_packages

      chown -R nobody:nogroup "$MOUNT_POINT" 2>/dev/null || chown -R nobody:nobody "$MOUNT_POINT"
      chmod 777 "$MOUNT_POINT"

      read -p "üåê Enter client IP (e.g., 10.0.0.22): " CLIENT_IP
      echo "$MOUNT_POINT $CLIENT_IP(rw,sync,no_subtree_check)" >> /etc/exports

      exportfs -a

      case $DISTRO in
        ubuntu|debian)
          systemctl restart nfs-kernel-server
          ;;
        rhel|centos|fedora)
          systemctl restart nfs-server
          ;;
        sles|opensuse*)
          systemctl restart nfsserver
          ;;
      esac

      echo "‚úÖ NFS Server setup complete and ready to share $MOUNT_POINT"
      break
      ;;

    "NFS Client")
      detect_distro
      echo "üöÄ Starting NFS Client Setup..."

      install_nfs_client_packages

      read -p "üìÅ Enter local mount directory (e.g., /nfs_clientshare): " CLIENT_MOUNT
      mkdir -p "$CLIENT_MOUNT"

      read -p "üåê Enter NFS Server IP (e.g., 10.0.0.12): " SERVER_IP
      read -p "üìÇ Enter server export path (e.g., /nfsshare): " SERVER_SHARE

      echo "$SERVER_IP:$SERVER_SHARE $CLIENT_MOUNT nfs defaults 0 0" >> /etc/fstab
      mount -a

      echo "‚úÖ NFS Client mounted $SERVER_IP:$SERVER_SHARE at $CLIENT_MOUNT"
      df -h "$CLIENT_MOUNT"
      break
      ;;

    "Exit")
      echo "üëã Exiting."
      exit 0
      ;;

    *) echo "‚ùå Invalid option. Try again." ;;
  esac
done
